<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/assets/css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="~/assets/css/main.css" />

    <title>Hello, world!</title>
    
</head>
<body>
    <div class="container-fluid" id="chatBody">
        <div class="row mt-1">
            <div class="col-12 flex-column p-2 alert alert-success" id="connectSuccessMessage" style="display:none"></div>
            <div class="col-12 flex-column p-2 alert alert-warning" id="connectWarningMessage" style="display:none"></div>
            <div class="col-12 flex-column p-2 alert alert-danger" id="connectDangerMessage" style="display:none"></div>
        </div>
        <div class="row mt-3">
            <div class="col-md-2 scrollbar scrollbar-danger overflow-auto" id="roomUserBoard" style="max-height:250px">
                <h6 class="text-center" id="activeRoomNameHeader"></h6>
                <h6 class="text-center">Active Users</h6>
                <div class="list-group m-1" id="roomUsersList">
                    <p class="text-center empty">Empty Users List</p>
                </div>
            </div>
            <div class="col-md-8 scrollbar scrollbar-primary overflow-auto border p-2" id="chatBoard"  style="max-height:650px">
            </div>
            <div class="col-md-2">
                <div class="row mb-2">
                    <div class="col-12">
                        <form class="form-inline">
                            <div class="form-group w-100">
                                <input type="text" class="form-control sm-2 m-1 w-100" id="txtRoomName" placeholder="Room Name">
                            </div>
                            <div class="form-group w-100">
                                <button type="button" class="btn btn-success sm-2 m-1 w-100" id="btnAddRoom">Add Room</button>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-12 scrollbar scrollbar-danger overflow-auto" style="max-height:250px">
                        <h6 class="text-center">Active Rooms</h6>
                        <div class="list-group m-1" id="roomList">
                            <p class="text-center empty">Empty Room List</p>
                        </div>
                    </div>
                </div>
                <div class="row mb-2">
                    <div class="col-12">
                        <form class="form-inline">
                            <div class="form-group w-100">
                                <button type="button" class="btn btn-warning sm-2 m-1 w-100" id="btnJoinRoom">Join Room</button>
                                <input type="hidden" id="txtActiveRoomName" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="row pt-4 border-top">
            <div class="col-md-8 offset-md-1">
                <form>
                    <div class="form-group">
                        <label id="lblNickName" for="txtMessage">Nick Name</label>
                        <textarea class="form-control" id="txtMessage" rows="4" style="resize:none;"></textarea>
                    </div>
                    <div class="form-group float-right">
                        <button type="button" class="btn btn-info btn-sm" id="btnSend">Send</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="container-fluid text-center" id="chatLogin">
        <form class="form-signin">
            <button class="btn btn-lg btn-primary btn-block" data-toggle="modal" data-target="#loginModal">Open Chat-Path Box</button>
            <p class="mt-5 mb-3 text-muted">&copy; Chat-Path Box 2022</p>
        </form>
    </div>

    <!-- Modal -->
    <div class="modal fade modal-dialog modal-sm" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="loginModalLabel">Chat Login</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="input-group flex-nowrap">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="addon-wrapping">@@</span>
                        </div>
                        <input type="text" id="txtNickname" class="form-control" placeholder="Nickname" aria-label="Username" aria-describedby="addon-wrapping">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-success btn-sm" id="btnLogin">Login</button>
                </div>
            </div>
        </div>
    </div>


    <script src="~/assets/js/jquery/jquery.min.js"></script>
    <script src="~/assets/js/signalr/signalr.min.js"></script>
    <script src="~/assets/js/bootstrap/bootstrap.bundle.min.js"></script>

    <script type="text/javascript">

        let isLogin = false;
        let isConnected = false;
        let nickName = "";
        let timerCounter = 10;

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("https://localhost:5001/chat-path")
            .configureLogging(logging => {
                logging.SetMinimumLevel(LogLevel.Information);
                logging.AddFilter("Microsoft.AspNetCore.SignalR", LogLevel.Debug);
                logging.AddFilter("Microsoft.AspNetCore.Http.Connections", LogLevel.Debug);
            })
            .build();

        $(document).ready(() => {

            $("#chatBody").hide();

            $("#chatLogin").hide();

            $('#loginModal').modal('toggle');

            $('#loginModal').on('hidden.bs.modal', function (event) {
                console.log("Modal login was closed.");
                if (!isLogin) {
                    $("#chatLogin").show();
                }
                else {
                    $("#chatBody").show();
                }
            });

            $('#loginModal').on('shown.bs.modal', function (event) {
                $("#chatBody").hide();
                $("#chatLogin").hide();
            })

            $('#btnLogin').on('click', function () {
                nickName = $("#txtNickname").val();
                if (nickName != "") {
                    isLogin = true;
                    connection.onclose(reconnect);
                    startConnection();
                    $('#lblNickName').html(nickName);
                    $('#loginModal').modal('hide');

                    $('#txtMessage').attr('disabled', true);
                    $('#txtRoomName').attr('disabled', true);
                    $('#btnAddRoom').attr('disabled', true);
                    $('#btnJoinRoom').attr('disabled', true);
                    $('#btnSend').attr('disabled', true);
                }
                else {
                    alert("Please enter the nick name.");
                }

            });

            $('#btnAddRoom').on('click', function () {
                let roomName = $("#txtRoomName").val();

                if (roomName != "") {
                    let conId = connection.connectionId;
                    let nickName = $('#lblNickName').html();

                    $.ajax({
                        url: 'https://localhost:6001/api/Room',
                        type: 'POST',
                        dataType: 'json',
                        contentType: "application/json",
                        crossDomain: true,
                        data: '{ "roomName": "' + roomName + '", "conId": "' + conId + '", "nickName": "' + nickName + '" }',
                        success: function (response) {
                            console.log(response);
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                }
                else {
                    alert("Please enter the room name.");
                }


            });

            $('#btnJoinRoom').on('click', function () {

                let activeRoomName = $('#txtActiveRoomName').val();
                let roomName = $("#txtActiveRoomName").val();
                let conId = connection.connectionId;
                let nickName = $('#lblNickName').html();

                $('#activeRoomNameHeader').html(activeRoomName);
                $('#txtMessage').attr('disabled', false);
                $('#btnSend').attr('disabled', false);

                $('#chatBoard').html('');

                $.ajax({
                    url: 'https://localhost:6001/api/Room/JoinChatRoom',
                    type: 'POST',
                    dataType: 'json',
                    contentType: "application/json",
                    crossDomain: true,
                    data: '{ "roomName": "' + roomName + '", "conId": "' + conId + '", "nickName": "' + nickName + '" }',
                    success: function (response) {
                        console.log(response);
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });

                $.ajax({
                    url: 'https://localhost:6001/api/Room/GetUserToRoom',
                    type: 'POST',
                    dataType: 'json',
                    contentType: "application/json",
                    crossDomain: true,
                    data: '{ "roomName": "' + activeRoomName + '", "conId": "' + conId + '", "nickName": "' + nickName + '" }',
                    success: function (response) {
                        console.log(response);
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            })

            $('#btnSend').on('click', function () {
                let textMessage = $('#txtMessage').val();
                let nickName = $('#lblNickName').html();
                let activeRoomName = $('#txtActiveRoomName').val();
                let conId = connection.connectionId;
                let d = new Date();
                let toDateTime = d.toLocaleString('tr-TR');

                $('#chatBoard').append(`
                        <div class="d-flex m-2 flex-row-reverse">
                            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-autohide="false">
                                <div class="toast-header">
                                    <span class="border border-primary m-1 bg-info box-avatar"></span>
                                    <strong class="mr-auto">${nickName}</strong>
                                    <small class="text-muted">${toDateTime}</small>
                                </div>
                                <div class="toast-body">${textMessage}</div>
                            </div>
                        </div>
                        `);

                $('.toast').toast('show');

                $('#txtMessage').val("");


                $.ajax({
                    url: 'https://localhost:6001/api/Chat',
                    type: 'POST',
                    dataType: 'json',
                    contentType: "application/json",
                    crossDomain: true,
                    data: '{ "roomName": "' + activeRoomName + '", "conId": "' + conId + '", "nickName": "' + nickName + '", "message": "' + textMessage + '", "created":"' + toDateTime+'" }',
                    success: function (response) {
                        console.log(response);
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });

                //console.log(textMessage, activeRoomName, conId);
                //connection.invoke("SendRoomMessage", textMessage, activeRoomName, conId);
            });

            $('body').on("click", '.rooms', function () {

                $('.rooms').each((index, item) => {
                    item.classList.remove('active');
                });

                $(this).addClass('active');

                let activeRoomName = $(this).html();
                $('#txtActiveRoomName').val(activeRoomName);

                $('#txtMessage').attr('disabled', true);
                $('#btnSend').attr('disabled', true);

            })

            connection.on("clientJoined", nickName => {
                $("#connectSuccessMessage").html(`${nickName} giriş yaptı.`);
                $("#connectSuccessMessage").fadeIn(2000, () => {
                    setTimeout(() => {
                        $("#connectSuccessMessage").fadeOut(2000);
                    }, 2000)
                })
            });

            connection.on("newRoomAdded", rooms => {

                $('#roomList').html('');
                $.each(rooms, (index, item) => {
                    $('#roomList').append('<a href="#" class="list-group-item list-group-item-action rooms">' + item.roomName + '</a>');
                });

            });

            connection.on("reciveMessage", (message, nickName, created) => {

                $('#chatBoard').append(`
                        <div class="d-flex m-2">
                            <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-autohide="false">
                                <div class="toast-header">
                                    <span class="border border-primary m-1 bg-warning box-avatar"></span>
                                    <strong class="mr-auto">${nickName}</strong>
                                    <small class="text-muted">${created}</small>
                                </div>
                                <div class="toast-body">${message}</div>
                            </div>
                        </div>
                        `);

                $('.toast').toast('show');
            });

            connection.on("roomUsersList", roomUsers => {
                $('#roomUsersList').html('');
                $.each(roomUsers, (index, item) => {
                    $('#roomUsersList').append('<a href="#" class="list-group-item list-group-item-action">' + item.nickName + '</a>');
                });
            });

        });

        window.onbeforeunload = function (event) {
            //return confirm("Confirm refresh");
            let conId = connection.connectionId;
            connection.invoke("UserDisconnect", conId).catch(error => console.log(error));

            return true;
        };

        async function startConnection()
        {
            console.log('connecting...');

            await connection.start()
                .then(
                    function () {
                        isConnected = true;
                        $('#txtRoomName').attr('disabled', false);
                        $('#btnAddRoom').attr('disabled', false);
                        $('#btnJoinRoom').attr('disabled', false);
                        console.log('connected!');

                        $("#connectSuccessMessage").html('ChatPath Server connected.');
                        $("#connectSuccessMessage").fadeIn(2000, () => {
                            setTimeout(() => {
                                $("#connectSuccessMessage").fadeOut(2000);
                            }, 2000)
                        });

                        let nickName = $('#lblNickName').html();
                        let conId = connection.connectionId;

                        $.ajax({
                            url: 'https://localhost:6001/api/Chat/GetNickName',
                            type: 'POST',
                            dataType: 'json',
                            contentType: "application/json",
                            crossDomain: true,
                            data: '{ "nickName": "' + nickName + '", "conId": "' + conId + '" }',
                            success: function (response) {
                                console.log(response);
                            },
                            error: function (error) {
                                console.log(error);
                            }
                        });

                        $.ajax({
                            url: 'https://localhost:6001/api/Chat/ChatRoomList',
                            type: 'POST',
                            dataType: 'json',
                            contentType: "application/json",
                            crossDomain: true,
                            success: function (response) {
                                console.log(response);
                            },
                            error: function (error) {
                                console.log(error);
                            }
                        });

                    })
                .catch(reconnect);
        }

        function reconnect() {

            $("#connectDangerMessage").html('ChatPath Server not connected.');
            $("#connectDangerMessage").fadeIn(2000, () => {
                setTimeout(() => {
                    $("#connectDangerMessage").fadeOut(2000);
                }, 2000)
            });

            console.log('reconnecting...');

            $("#connectWarningMessage").html('ChatPath Server reconnection...<span id="timerConnect">10</span>');
            $("#connectWarningMessage").fadeIn(1000, () => {
                setTimeout(() => {
                    $("#connectWarningMessage").fadeOut(10000);
                }, 1000)
            });
            timerConnect();
            isConnected = false;
            $('#txtMessage').attr('disabled', true);
            $('#txtRoomName').attr('disabled', true);
            $('#btnAddRoom').attr('disabled', true);
            $('#btnJoinRoom').attr('disabled', true);
            $('#btnSend').attr('disabled', true);
            setTimeout(startConnection, 10000);
        }

        function timerConnect() {
            console.log("timerConnect : " + timerCounter);
            console.log(timerCounter);
            if (timerCounter > 0) {
                $("#timerConnect").html(timerCounter);
                setTimeout(timerConnect, 1000);
                timerCounter--;
            }
            else {
                timerCounter = 10;
            }
        }

    </script>
</body>
</html>